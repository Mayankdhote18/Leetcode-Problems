class Solution {
public:
    int maxTotalFruits(vector<vector<int>>& fruits, int startPos, int k) {
        int n = fruits.size();
        int maxFruits = 0;
        int left = 0, sum = 0;

        for (int right = 0; right < n; ++right) {
            sum += fruits[right][1];


            while (left <= right) {
                int leftPos = fruits[left][0];
                int rightPos = fruits[right][0];

           
                int stepsLeftFirst = abs(startPos - leftPos) + (rightPos - leftPos);
                int stepsRightFirst = abs(startPos - rightPos) + (rightPos - leftPos);

                int steps = min(stepsLeftFirst, stepsRightFirst);

                if (steps <= k) break;

                sum -= fruits[left++][1];
            }

            maxFruits = max(maxFruits, sum);
        }

        return maxFruits;
    }
};
